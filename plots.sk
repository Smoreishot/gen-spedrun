command plot [<string>]:
	trigger:
		if arg-1 is not set:
			send "&0 "
			send "&7This is a plot thing made by smore&8."
			send "&7You can use several arguments&8, &7in"
			send "&7the form &9/plot argument argument&8."
			send "&7You may not always use the second&8."
			send "&0 "
			send "&6&oValid arguments &7create&8,&7 delete&8,"
			send "&7                     reset&8, &7home&8, &7visit&8"
			send "&7                     trust&8, &7untrust&8, &7ban&8,"
			send "&7                     unban&8, &7clearitems"  
			send "&0 "
			
		if arg-1 is "create":
			if metadata tag "plotdelete" of player is true:
				send "&cyou're deleting a plot right now. please wait."
			else:
				if {plots::%player's uuid%::home} is set:
					send "You've got a plot."
				else:
					if {plot} is not set:
						set {plot} to "1,0"
					if {plots::open::1::home} is set:
						send "&7creating plot..."
						
						set {_ok} to size of {plots::open::*}
						
						create full bound with id (player's uuid) within {plots::open::%{_ok}%::coord1} and {plots::open::%{_ok}%::coord2}
						
						set {plots::%player's uuid%::home} to highest solid block at {plots::open::%{_ok}%::home}
						set {plots::%player's uuid%::coord1} to {plots::open::%{_ok}%::coord1}
						set {plots::%player's uuid%::coord2} to {plots::open::%{_ok}%::coord2}
						
						teleport player to {plots::%player's uuid%::home}
						
					else:
						set {_ok::*} to split {plot} by ","
						set {_x} to {_ok::1} parsed as an integer
						set {_z} to {_ok::2} parsed as an integer
						
						set {_x1} to {_x} * 60
						set {_x2} to {_x1} - 40
						set {_z1} to {_z} * 60
						set {_z2} to {_z1} - 40
						
						create full bound with id (player's uuid) within location({_x1}, 0, {_z1}, world "world") and location({_x2}, 0, {_z2}, world "world")
						
						set {plots::%player's uuid%::home} to highest solid block at location({_x1} - 20, 0, {_z1} - 20, world "world")
						set {plots::%player's uuid%::coord1} to location({_x1}, 1, {_z1}, world "world")
						set {plots::%player's uuid%::coord2} to location({_x2}, 255, {_z2}, world "world")
						
						teleport player to {plots::%player's uuid%::home}
						
						if {_x} = {plotsMaximumXvalue}:
							add 1 to {_z}
						set {plot} to "%{_x} + 1, {_z}%"
						
					send "&aplot created!"
					set {plotmade::%player's uuid%} to unix timestamp of 1 minute from now
					
					stop
					
		if {plots::%player's uuid%::home} is set:
					
			if arg-1 is "delete":
		
				if {plotmade::%player's uuid%} <= unix timestamp of now:
			
					set metadata tag "plotdelete" of player to true
				
					send "&7deleting plot..."
				
					resetplot(player)
				
					set {_ok} to size of {plots::open::*} + 1
					set {plots::open::%{_ok}%::coord1} to {plots::%player's uuid%::coord1}
					set {plots::open::%{_ok}%::coord2} to {plots::%player's uuid%::coord2}
					set {plots::open::%{_ok}%::home} to location(x coordinate of {plots::open::coord1} - 20, 0, z coordinate of {plots::open::coord1} -20, world "world")
				
					#broadcast "%{plots::%player's uuid%::home}%"
				
					delete {plots::%player's uuid%::*}
					delete {plotmade::%player's uuid%}
					delete {plotreset::%player's uuid%}
				
					wait 5 ticks
				
					delete bound with id (player's uuid)
					send "&cplot deleted!"
					delete metadata tag "plotdelete" of player
					
				else:
					
					set {_cum} to {plotmade::%player's uuid%} - unix timestamp of now
					send "&7you must wait &f%floor({_cum})% second(s) &7before deleting your plot."
				
			if arg-1 is "reset":
				
				if ({plotreset::%player's uuid%} ? unix timestamp of now) <= unix timestamp of now:
				
					set {plotreset::%player's uuid%} to unix timestamp of 1 minute from now
				
					send "&cresetting plot... don't build."
			
					resetplot(player)
			
					send "&cplot reset."
					
				else:

					set {_cum} to {plotreset::%player's uuid%} - unix timestamp of now
					send "&7you must wait &f%floor({_cum})% second(s) &7before resetting your plot again."
					
			if arg-1 is "clearitems":
			
				send "&cresetting items..."
			
				loop (all items within {plots::%player's uuid%::coord1} and {plots::%player's uuid%::coord2}):
					delete loop-item
				
				send "&citems reset."
			
			if arg-1 is "home":

				teleport player to {plots::%player's uuid%::home}
				send "&awelcome home hottie"
				
		else:
		
			send "&cyou dont have a plot"
		
function resetplot(p: player):
	set {_u} to {_p}'s uuid
	loop (all blocks within {plots::%{_u}%::coord1} and {plots::%{_u}%::coord2}) where [input is set]:
		set loop-block to air
		wait a tick if ((random integer between 1 and 100)/20 is an integer)
	wait a tick
	set all blocks within {plots::%{_u}%::coord1} and location(x coordinate of {plots::%{_u}%::coord2}, 1, z coordinate of {plots::%{_u}%::coord2}, world "world") to bedrock

command purge:
	permission: op
	trigger:
		delete {plots::*}
		delete {plot}

on bound enter:
	send "&centering %event-bound%"

on bound exit:
	send "&cexiting %event-bound%"
